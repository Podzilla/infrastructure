apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot-microservice.fullname" . }}
  labels:
    app: {{ include "spring-boot-microservice.name" . }}
    chart: {{ include "spring-boot-microservice.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ include "spring-boot-microservice.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "spring-boot-microservice.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.service.port | default 8080 }}
          env:
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port | default 8080 }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port | default 8080 }}
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            {{- if .Values.configMapName }}
            - name: config
              mountPath: /config
            {{- end }}
      volumes:
        {{- if .Values.configMapName }}
        - name: config
          configMap:
            name: {{ .Values.configMapName }}
        {{- end }}