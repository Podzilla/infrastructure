---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: user-analytics-customer-registered-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: user_exchange # The name of the source exchange
  destination: analytics_user_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: customer.registered # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: user-analytics-courier-registered-binding # Unique name for this CR (Missing binding from previous K8s list)
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: user_exchange # The name of the source exchange
  destination: analytics_user_event_queue # The name of the destination queue (Matches local setup)
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: courier.registered # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: user-courier-courier-registered-binding # Unique name for this CR (Matches local setup)
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: user_exchange # The name of the source exchange
  destination: courier_user_event_queue # The name of the destination queue (Matches local setup)
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: courier.registered # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: inventory-analytics-product-created-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: inventory_exchange # The name of the source exchange
  destination: analytics_inventory_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: product.created # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: inventory-analytics-inventory-updated-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: inventory_exchange # The name of the source exchange
  destination: analytics_inventory_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: inventory.updated # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: inventory-warehouse-stock-reservation-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: inventory_exchange # The name of the source exchange
  destination: warehouse_inventory_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.stock_reservation_requested # The routing key (Assuming from method name)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: inventory-order-stock-reserved-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: inventory_exchange # The name of the source exchange
  destination: order_inventory_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: warehouse.stock_reserved # The routing key (Assuming from method name)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: inventory-order-fulfillment-failed-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: inventory_exchange # The name of the source exchange
  destination: order_inventory_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: warehouse.order_fulfillment_failed # The routing key (Assuming from method name)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-analytics-placed-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: analytics_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.placed # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-analytics-cancelled-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: analytics_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.cancelled # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-analytics-assigned-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: analytics_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.assigned_to_courier # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-analytics-out-for-delivery-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: analytics_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.out_for_delivery # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-analytics-delivered-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: analytics_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.delivered # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-analytics-delivery-failed-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: analytics_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.delivery_failed # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-order-cart-checkedout-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: order_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: cart.checkedout # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-order-packaged-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: order_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.packaged # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-order-assigned-binding # Unique name for this CR (matches local setup)
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: order_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.assigned_to_courier # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-order-out-for-delivery-binding # Unique name for this CR (matches local setup)
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: order_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.out_for_delivery # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-order-delivered-binding # Unique name for this CR (matches local setup)
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: order_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.delivered # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-warehouse-placed-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: warehouse_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.placed # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-warehouse-delivery-failed-binding # Unique name for this CR (matches local setup)
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: warehouse_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.delivery_failed # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: order-courier-assigned-binding # Unique name for this CR
  namespace: dev # Must match your RabbitmqCluster namespace
spec:
  source: order_exchange # The name of the source exchange
  destination: courier_order_event_queue # The name of the destination queue
  destinationType: queue # Must be 'queue' or 'exchange' (camelCase)
  routingKey: order.assigned_to_courier # The routing key (matches local setup)
  vhost: / # The vhost name
  # arguments: {} # Optional: add binding arguments if needed
  rabbitmqClusterReference:
    name: my-rabbitmq # Link to your RabbitmqCluster resource name